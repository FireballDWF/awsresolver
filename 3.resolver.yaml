AWSTemplateFormatVersion: 2010-09-09
Parameters:
  VPCId:
    Description: "VpcId of existing VPC where the Resolver should be located in"
    Type: AWS::EC2::VPC::Id
  SubnetIdA:
    Description: "SubnetId for location of Resolver Endpoint"
    Type: AWS::EC2::Subnet::Id
  SubnetIdB:
    Description: "SubnetId for location of Resolver Endpoint"
    Type: AWS::EC2::Subnet::Id
  CustomerManagedDnsIpA:
    Description: "IP Address of Customer's Managed DNS"
    Type: String
  CustomerManagedDnsIpB:
    Description: "IP Address of Customer's Managed DNS"
    Type: String
  CustomerPrivateHostedZoneDomainName:
    Description: "DomainName of Customers PrivateHostedZone"
    Type: String
Resources:
  ResolverSecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Open-up ports for bind
      GroupName: !Join ["-", [Ref: "AWS::StackName", "dns-sec-group"]]
      VpcId:
        !Ref VPCId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: "53"
          ToPort: "53"
          CidrIp: 0.0.0.0/0
        - IpProtocol: udp
          FromPort: "53"
          ToPort: "53"
          CidrIp: 0.0.0.0/0

  DNSOutboundEndpoint:
    Type: "AWS::Route53Resolver::ResolverEndpoint"
    Properties:
      Direction: "outbound"
      IpAddresses:
        - SubnetId:
            !Ref SubnetIdA
        - SubnetId:
            !Ref SubnetIdB
      Name: !Join ["-", [Ref: "AWS::StackName", "endpoint"]]
      SecurityGroupIds:
        - !Ref ResolverSecGroup

  DNSInboundEndpoint:
    Type: "AWS::Route53Resolver::ResolverEndpoint"
    Properties:
      Direction: "inbound"
      IpAddresses:
        - SubnetId:
            !Ref SubnetIdA
        - SubnetId:
            !Ref SubnetIdB
      Name: !Join ["-", [Ref: "AWS::StackName", "endpoint"]]
      SecurityGroupIds:
        - !Ref ResolverSecGroup

  DNSRule1:
    Type: "AWS::Route53Resolver::ResolverRule"
    Properties:
      DomainName: "."
      Name: !Join ["-", [Ref: "AWS::StackName", "wildcard"]]
      ResolverEndpointId: !GetAtt DNSOutboundEndpoint.ResolverEndpointId
      RuleType: "FORWARD"
      TargetIps:
        - Ip: !Ref CustomerManagedDnsIpA
          Port: "53"
        - Ip: !Ref CustomerManagedDnsIpB
          Port: "53"

  DNSRule2:
    Type: "AWS::Route53Resolver::ResolverRule"
    Properties:
      DomainName: "amazonaws.com"
      Name: !Join ["-", [Ref: "AWS::StackName", "amazon"]]
      RuleType: "SYSTEM"

  DNSRule3:
    Type: "AWS::Route53Resolver::ResolverRule"
    Properties:
      DomainName: !Ref CustomerPrivateHostedZoneDomainName
      Name: !Join ["-", [Ref: "AWS::StackName", "customer-domain"]]
      RuleType: "SYSTEM"

Outputs:
  Rule1:
    Description: rule 1 associate command
    Value:
      Fn::Join:
        - " "
        - - "aws route53resolver associate-resolver-rule --resolver-rule-id"
          - !GetAtt DNSRule1.ResolverRuleId
          - "--vpc-id"
          -  !Ref VPCId
  Rule2:
    Description: rule 2 associate command
    Value:
      Fn::Join:
        - " "
        - - "aws route53resolver associate-resolver-rule --resolver-rule-id"
          - !GetAtt DNSRule2.ResolverRuleId
          - "--vpc-id"
          -  !Ref VPCId

  Rule3:
    Description: rule 3 associate command
    Value:
      Fn::Join:
        - " "
        - - "aws route53resolver associate-resolver-rule --resolver-rule-id"
          - !GetAtt DNSRule3.ResolverRuleId
          - "--vpc-id"
          -  !Ref VPCId
